# Generated by Django 4.1.7 on 2023-03-08 05:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Club",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("CK", "Cook"),
                            ("CT", "Culture"),
                            ("GA", "Game"),
                            ("LA", "Language"),
                            ("MU", "Music"),
                            ("OD", "Outdoor"),
                            ("SP", "Sports"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="club_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("create_date", models.DateTimeField(verbose_name="생성일")),
                ("modify_date", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reply_author",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "club_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main.club"
                    ),
                ),
                (
                    "like",
                    models.ManyToManyField(
                        related_name="reply_like", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Board",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        help_text="게시글의 제목을 한 줄로 작성하세요.",
                        max_length=200,
                        verbose_name="제목",
                    ),
                ),
                (
                    "content",
                    models.TextField(help_text="내용을 상세히 작성하세요.", verbose_name="내용"),
                ),
                ("create_date", models.DateTimeField(verbose_name="생성일")),
                ("modify_date", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="board_author",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main.club"
                    ),
                ),
                (
                    "like",
                    models.ManyToManyField(
                        related_name="club_like", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
    ]
